version: '2.1'

services:

  traefik:
    restart: on-failure
    image: "traefik:v2.1"
    container_name: "traefik"
    ports:
      - "80:80"
      - "8080:8080"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
    
  acp-live:
    restart: on-failure
    build:
      context: ./acp-live
    labels:
      - "traefik.http.routers.acp-live.rule=PathPrefix(`/acp-live`)"
      - "traefik.http.routers.acp-live.middlewares=acp-live-stripprefix"
      - "traefik.http.middlewares.acp-live-stripprefix.stripprefix.prefixes=/acp-live"
      - "traefik.enable=true"

  child-app:
    restart: on-failure
    build:
      context: ./child-app
    labels:
      - "traefik.http.routers.child-app.rule=PathPrefix(`/surveillance`)"
      - "traefik.http.routers.child-app.middlewares=child-app-stripprefix"
      - "traefik.http.middlewares.child-app-stripprefix.stripprefix.prefixes=/surveillance"
      - "traefik.enable=true"

  micro-frontend:
    restart: on-failure
    build:
      context: ./micro-frontend
    labels:
      - "traefik.http.routers.micro-frontend.rule=PathPrefix(`/dataanalysis`)"
      - "traefik.http.routers.micro-frontend.middlewares=micro-frontend-stripprefix"
      - "traefik.http.middlewares.micro-frontend-stripprefix.stripprefix.prefixes=/dataanalysis"
      - "traefik.enable=true"
